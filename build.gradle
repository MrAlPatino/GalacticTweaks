buildscript {
	repositories {
		maven {
			name = "gradle"
			url = "https://plugins.gradle.org/m2/"
		}
		maven {
			name = "forge"
			url = "https://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	}
}

plugins {
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id 'net.ltgt.apt' version '0.10'
	id 'eclipse'
}

apply plugin: "java"
apply plugin: 'net.minecraftforge.gradle.forge'


// ==========================================
//            Load Secrets
// ==========================================
apply from: "https://raw.githubusercontent.com/ReadOnly-Mods/Misc/master/Gradle/secret.gradle"
loadSecrets()
// ==========================================


version = "${versionMajor}.${versionMinor}.${versionRev}"
group = "${group}"
archivesBaseName = "${name}"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
	sourceCompatibility = targetCompatibility = '1.8'
}

// ==========================================
//            Load GC Dev Files
// ==========================================
project.ext {
	GCBuild = "261"
	GCVersion = "1.12.2-4.0.2.${GCBuild}"
}
apply from: "https://raw.githubusercontent.com/ReadOnly-Mods/Misc/master/Gradle/gcdevfiles.gradle"
// ==========================================

repositories {
	maven {
		// Location of CurseAPI Files
		url "https://jitpack.io"
	}
	mavenCentral()
	maven {
		name 'MJRLegends'
		url = "https://maven.mjrlegends.com/"
	}
	maven {
		name = 'curseforge'
		url = 'https://minecraft.curseforge.com/api/maven/'
	}
	maven {
		name 'DVS1 Maven FS'
		url 'http://dvs1.progwml6.com/files/maven'
	}
	maven {
		name 'IC2'
		url = "http://maven.ic2.player.to"
	}

}

dependencies {

	compile "org.projectlombok:lombok:1.18.12"
	apt "org.projectlombok:lombok:1.18.12"

	// LOAD GC ADDONS
	compile fileTree(include: ['*.jar'], dir: 'lib')

	compile "com.mjr.planetprogression:PlanetProgression:1.12.2-0.4.5:api"
	compile "com.mjr.extraplanets:ExtraPlanets:1.12.2-0.7.0:dev"
	runtime "com.mjr.mjrlegendslib:MJRLegendsLib:1.12.2-1.2.0"
	compile "industrial-craft:industrialcraft-2-2.8.99:ex112:api"

}

minecraft {
	version = "${mc_version}-${forge_version}"
	runDir = "run"
	mappings = "${mcp}"

	replace '@VERSION@', project.version
	replace '@MCVERSION@', project.minecraft.version
	replace '@FINGERPRINT@', project.findProperty('signSHA1')
	replaceIn "Ref.java"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
 	    attributes 'FMLAT': 'galactictweaks_at.cfg'
 	}
 }

jar {
	manifest {
		mainAttributes(
				'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}",
				'Timestamp': System.currentTimeMillis(),
				'Implementation-Title': project.archivesBaseName,
				'Implementation-Version': version,
				'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
				'Built-On': "${project.mc_version}-${project.forge_version}"
				)
	}
}

task signJar(type: SignJar, dependsOn: reobfJar) {
	onlyIf {
		project.hasProperty('keyStore')
	}

	inputFile = jar.archivePath
	outputFile = jar.archivePath

	keyStore = findProperty('keyStore')
	alias = findProperty('keyStoreAlias')
	storePass = findProperty('keyStorePass')
	keyPass = findProperty('keyStoreKeyPass')
}

curseforge {
	if (secret.containsKey('curseapi')) {
		apiKey = secret.curseapi
        project {
            id = "359766"
            changelog = file("CHANGELOG.md")
            changelogType = "markdown"
            releaseType = "release"
            addGameVersion mc_version

            mainArtifact(jar) {
                displayName = "GalacticTweaks-" + mc_version + "-" + version
            }
        }
	}
}

build.dependsOn signJar
tasks.curseforge.dependsOn(build)